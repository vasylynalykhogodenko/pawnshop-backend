// 'use strict';
// debugger;

// let s: string = "Hello World";
// let lastWord: string[] = [];

// for (let i: number = s.length; i >= 0; i--) {
//     let newWord = s[i]; // world

//   if (newWord !== ' ') {
//     lastWord = newWord;
//     break;
//   }
// }

// console.log('I am last word ', lastWord.length);




// // const menu = [
// //     { name: 'Margherita', prices: 8 },
// //     { name: 'Pepperoni', prices: 10 },
// //     { name: 'Hawaiian', prices: 10 },
// //     { name: 'Veggie', prices: 9 },
// // ];

// // const cashInRegister = 100;
// // const orderQueue = [];

// // // function addNewPizza (pizzaObj) {
// // //   menu.push(pizzaObj);
// // // };

// // // function placeOrder (pizzaName) {
// //     const pizzaName = 'Veggie';
// //     const newOrder = {};

// //     for (let i = 0; i < menu.length; i++) {
// //         if (pizzaName === menu[i].name) {
// //             cashInRegister = cashInRegister + menu[i].prices;
// //             newOrder = { pizza: pizzaName, status: 'ordered' }
// //             orderQueue.push(newOrder);
// //         }
// //     }
// // console.log(newOrder)

// //     //return newOrder;
// // //}

// // //placeOrder('Veggie');







// // // var concatMap = require('../');
// // // var test = require('tape');

// // // test('empty or not', function (t) {
// // //     var xs = [ 1, 2, 3, 4, 5, 6 ];
// // //     var ixes = [];
// // //     var ys = concatMap(xs, function (x, ix) {
// // //         ixes.push(ix);
// // //         return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];
// // //     });
// // //     t.same(ys, [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]);
// // //     t.same(ixes, [ 0, 1, 2, 3, 4, 5 ]);
// // //     t.end();
// // // });

// // // test('always something', function (t) {
// // //     var xs = [ 'a', 'b', 'c', 'd' ];
// // //     var ys = concatMap(xs, function (x) {
// // //         return x === 'b' ? [ 'B', 'B', 'B' ] : [ x ];
// // //     });
// // //     t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
// // //     t.end();
// // // });

// // // test('scalars', function (t) {
// // //     var xs = [ 'a', 'b', 'c', 'd' ];
// // //     var ys = concatMap(xs, function (x) {
// // //         return x === 'b' ? [ 'B', 'B', 'B' ] : x;
// // //     });
// // //     t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
// // //     t.end();
// // // });

// // // test('undefs', function (t) {
// // //     var xs = [ 'a', 'b', 'c', 'd' ];
// // //     var ys = concatMap(xs, function () {});
// // //     t.same(ys, [ undefined, undefined, undefined, undefined ]);
// // //     t.end();
// // // });
